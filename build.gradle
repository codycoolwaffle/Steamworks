buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven'

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = "${config.mc_version}-${config.build_number}"
group = 'waffletopia.${config.mod_id}' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_name

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20200514-1.15.1'
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                steamworks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                steamworks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'steamworks', '--all', '--output', file('src/generated/resources/')

            mods {
                steamworks {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        // for AutoRegLib
        name "blamejared"
        url "http://maven.blamejared.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${config.mc_version}-${config.forge_version}"
    compile fg.deobf("vazkii.autoreglib:AutoRegLib:${config.arl_version}")
}

//Thanks Vazkii <3
task incrementBuildNumber{
    doFirst{
        config.build_number = (config.build_number.toString().toInteger()) + 1
        def output = new FileOutputStream(configFile)
        config.toProperties().store(output, "")
        output.close()
    }
}
build.dependsOn incrementBuildNumber

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${config.mod_id}",
                "Specification-Vendor"    : "waffletopia",
                "Specification-Version"   : "1",
                "Implementation-Title"    : "${config.mod_id}",
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "waffletopia",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

uploadArchives{
    repositories{
        mavenDeployer{
            repository(url: "file://" + (System.getenv("local_maven") != null ? System.getenv("local_maven") : System.getenv("bamboo_local_maven")))
        }
    }
}

defaultTasks 'clean', 'build', 'incrementBuildNumber'